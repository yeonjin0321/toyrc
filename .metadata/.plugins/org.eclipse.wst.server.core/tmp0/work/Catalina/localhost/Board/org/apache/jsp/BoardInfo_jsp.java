/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2022-08-29 12:13:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.BoardBean;
import model.BoardDAO;

public final class BoardInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.BoardDAO");
    _jspx_imports_classes.add("model.BoardBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<body>\r\n");
      out.write("   ");

    int num=Integer.parseInt(request.getParameter("num").trim()); 
   //리스트 파일에서 넘겨준  num값을 받는다. num이 테이블의 기본키이기 때문에 num으로 정보를 확인할수 있기 때문
    //공백제거후 정수형으로 바뀜 (정수형으로 바꾸면 숫자를 넣기가 쉽기 때문에)
    
    //데이터베이스 접근
    BoardDAO bdao = new BoardDAO();
    //boardbean 타입으로 하나의 게시글을 리턴 받는다.
    BoardBean bean = bdao.getOneBoard(num);
    

      out.write("\r\n");
      out.write("    <center>\r\n");
      out.write("        <h2>게시글 보기</h2>\r\n");
      out.write("        <!-- 빈클레스가 가지고있는 값들을 뿌려준다. -->\r\n");
      out.write("        <table width=\"600\" border=\"1\" bgcolor=\"skyblue\">\r\n");
      out.write("            <tr height=\"40\">\r\n");
      out.write("                <td align=\"center\" width=\"120\">글 번호</td>\r\n");
      out.write("                <td align=\"center\" width=\"180\">");
      out.print(bean.getNum() );
      out.write("</td>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("                <td align=\"center\" width=\"120\">조회수</td>\r\n");
      out.write("                <td align=\"center\" width=\"180\">");
      out.print(bean.getReadcount() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write("            <tr height=\"40\">\r\n");
      out.write("                <td align=\"center\" width=\"120\">작성자</td>\r\n");
      out.write("                <td align=\"center\" width=\"180\">");
      out.print(bean.getWriter() );
      out.write("</td>\r\n");
      out.write(" \r\n");
      out.write("                <td align=\"center\" width=\"120\">작성일</td>\r\n");
      out.write("                <td align=\"center\" width=\"180\">");
      out.print(bean.getReg_date() );
      out.write("</td>\r\n");
      out.write("            <tr height=\"40\">\r\n");
      out.write("                <td align=\"center\" width=\"120\" colspan=\"2\">이메일</td>\r\n");
      out.write("                <td align=\"center\" width=\"180\" colspan=\"2\">");
      out.print(bean.getEmail() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write("            <tr height=\"40\">\r\n");
      out.write("                <td align=\"center\" width=\"120\">제목</td>\r\n");
      out.write("                <td align=\"center\" colspan=\"3\">");
      out.print(bean.getSubject() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write("            <tr height=\"80\">\r\n");
      out.write("                <td align=\"center\" width=\"120\">글 내용</td>\r\n");
      out.write("                <td align=\"center\" colspan=\"3\">");
      out.print(bean.getContent() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write("            <tr height=\"40\">\r\n");
      out.write("                <td align=\"center\" colspan=\"4\"><input type=\"button\"\r\n");
      out.write("                    value=\"답글쓰기\"\r\n");
      out.write("                    onclick=\"location.href='BoardReWriteForm.jsp?num=");
      out.print(bean.getNum());
      out.write("&ref=");
      out.print(bean.getRef());
      out.write("&re_step=");
      out.print(bean.getRe_step());
      out.write("&re_level=");
      out.print(bean.getRe_level());
      out.write("'\">\r\n");
      out.write("                    <!-- 부모글의 ref, revel, num값을 다 알고 있어야된다.(리플달기이기 때문) --> <!-- 위에처럼 num값만 넘겨서 할수도 있다.\r\n");
      out.write("        int num = Integer.parseInt(request.getParameter(\"num\").trim());\r\n");
      out.write("        BoardDAO bdao = new BoardDAO();\r\n");
      out.write("        BoardBean bean = bdao.getOneBoard(num); --> <input type=\"button\"\r\n");
      out.write("                    value=\"수정하기\"\r\n");
      out.write("                    onclick=\"location.href = 'BoardUpdateForm.jsp?num=");
      out.print(bean.getNum());
      out.write("'\">\r\n");
      out.write("                    <input type=\"button\" value=\"삭제하기\"\r\n");
      out.write("                    onclick=\"location.href = 'BoardDeleteForm.jsp?num=");
      out.print(bean.getNum());
      out.write("'\">\r\n");
      out.write("                    <input type=\"button\" value=\"목록보기\"\r\n");
      out.write("                    onclick=\"location.href = 'BoardList.jsp?num=");
      out.print(bean.getNum());
      out.write("'\">\r\n");
      out.write("        </table>\r\n");
      out.write("    </center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
