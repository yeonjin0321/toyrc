/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2022-09-04 11:50:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import db.CarListBean;
import db.RentcarDAO;

public final class CarReserveInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("db.CarListBean");
    _jspx_imports_classes.add("db.RentcarDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<body>\r\n");

	int no = Integer.parseInt(request.getParameter("no"));

	//데이터 베이스 접근
	RentcarDAO rdao = new RentcarDAO();
	//렌트카 하나에 대한 정보를 얻어옴
	CarListBean bean = rdao.getOneCar(no);  
   
        int category = bean.getCategory();
        String temp = "";
        if (category == 1)
            temp = "소형";
        else if (category == 2)
            temp = "중형";
        else if (category == 3)
            temp = "대형";
   

      out.write("\r\n");
      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("<form action=\"RentcarMain.jsp?center=CarOptionSelect.jsp\" method=\"post\">\r\n");
      out.write("\t<table width=\"1000\">\r\n");
      out.write("\t\t      <tr height=\"100\">\r\n");
      out.write("                <td align=\"center\" colspan=\"3\">\r\n");
      out.write("                <font size=\"6\" color=\"gray\">\r\n");
      out.write("                ");
      out.print(bean.getName() );
      out.write(" 차량 선택</font></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("             <tr>\r\n");
      out.write("                <td width=\"500\" rowspan=\"6\" align=\"center\">\r\n");
      out.write("                <img alt=\"\" src=\"./img/");
      out.print(bean.getImg());
      out.write("\" width=\"450\">\r\n");
      out.write("            </td>\r\n");
      out.write("            <td width=\"250\" align=\"center\">차량이름</td>\r\n");
      out.write("            <td width=\"250\" align=\"center\">");
      out.print(bean.getName() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <!--차량수량  -->\r\n");
      out.write("            <tr>\r\n");
      out.write("            \t<td width=\"250\" align=\"center\">차량수량</td>\r\n");
      out.write("            <td width=\"250\" align=\"center\">\r\n");
      out.write("            <select name=\"qty\">\r\n");
      out.write("            <option value=\"1\">1</option>\r\n");
      out.write("            <option value=\"2\">2</option>\r\n");
      out.write("            <option value=\"3\">3</option>\r\n");
      out.write("            </select></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<!-- 정보 -->\r\n");
      out.write("\t\t\t <tr>\r\n");
      out.write("            \t<td width=\"250\" align=\"center\">차량분류</td>\r\n");
      out.write("\t\t\t <td width=\"250\" align=\"center\">");
      out.print( temp );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t <tr>\r\n");
      out.write("            \t<td width=\"250\" align=\"center\">대여가격</td>\r\n");
      out.write("\t\t\t <td width=\"250\" align=\"center\">");
      out.print(bean.getPrice());
      out.write("원</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t <tr>\r\n");
      out.write("            \t<td width=\"250\" align=\"center\">제조회사\r\n");
      out.write("            \t<td width=\"250\" align=\"center\">");
      out.print(bean.getCompany() );
      out.write("</td>\r\n");
      out.write("            \t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("            \t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("            \t<input type=\"hidden\" name=\"no\" value=\"");
      out.print(bean.getNo());
      out.write("\" >\r\n");
      out.write("            \t<input type=\"hidden\" name=\"img\" value=\"");
      out.print(bean.getImg());
      out.write("\" >\r\n");
      out.write("            \t<input type=\"submit\" value=\"옵션 선택후 구매하기\" >\r\n");
      out.write("            </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<br><br><br>\r\n");
      out.write("\t  <font size=\"5\" color=\"gray\"> 차량정보보기 </font>\r\n");
      out.write("\t  <p>\r\n");
      out.write("\t 이차량은 ");
      out.print( bean.getInfo() );
      out.write("\r\n");
      out.write("\t  </p>\r\n");
      out.write("\t  \r\n");
      out.write("\t\r\n");
      out.write("\t</form>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
